# This defines a static static label named 'example-label' with the given props.
example-label:
  label-color: 0075ca  # blue
  label-description: This is a simple example static label.


# This defines two "namespaced" labels named: label-prefix/sublabel-{1,2}.
label-prefix:
  sublabel-1:
    label-color: 0075ca
    label-description: This is a simple first sublabel.
  sublabel-2:
    label-color: d73a4a  # red
    label-description: This is a simple second sublabel.


# This will define as many labels as there are filepath regex matches.
label-for-sample-file-{files.name_regex.groups[0]}:
  label-color: 0075ca
  # NOTE: "match" will contain the entire match.
  label-description: This label was created for file '{files.name_regex.match}'.
  selectors:
    files:
      # This will specify a regex to be matched against full filepaths in
      # the repo tree. 'files-name-group-0' will be the entire filename.
      name_regex: "samples/(.*).yaml"

      # TODO(aznashwan):
      # type: "<binary|text>"
      # size: min/max filesizes for some "kind/bigblob"-type label combos?


# This will define a label named "bug" which will automatically be
# associated with issues/PRs matching the provided regexes.
bug:
  label-color: d73a4a
  label-description: This label signifies the Issue/PR is about a bug.
  selectors:
    regex:
      # This allows for case insensitive searches. (default is false)
      case_insensitive: true

      # This will make the label be applied to PRs/Issues whose titles/descriptions
      # match the given regex. (in this case, some simple keywords)
      title: "(issue|bug|fix|problem|failure|error)"
      description: "(issue|bug|problem|failure|error)"

      # This will make the label applied to PRs/Issues where anyone comments
      # the given magic string on a single line within the comment.
      comment: "^(/label-me-as bug)$"
      # Only allows maintainers to add this label via comment. (default is true)
      maintainer_comments_only: false


manual-{regex.comment.groups[1]}:
  label-color: d73a4a
  label-description: "This label was defined through a maintainer comment with: {regex.comment.full}"
  selectors:
    regex:
      maintainer_comments_only: true
      comment: "^(/label-me-as ([\\-a-z]+))$"


# This will define two labels named "pr-size-measure/{small,large}" that will
# automatically get applied to Pull Requsts whose change counts match.
pr-size-measure:
  small:
    label-color: 0075ca
    label-description: |
      This PR is between {diff.min} and {diff.max} lines of code.
    selectors:
      diff:
        type: net # Can be: additions/deletions/total/net (net = additions - deletions)
        min: 1
        max: 1000

  large:
    label-color: d73a4a
    label-description: |
      This PR is between {diff.min} and {diff.max} lines of code.
    selectors:
      diff:
        min: 1000
        max: 10000

  too-big:
    label-color: d73a4a
    label-description: |
      This PR has more than {diff.min} lines and must be broken down into smaller PRs.
    selectors:
      diff:
        # NOTE: omitting 'max/min' will set the bounds to +/- Infinity respectively.
        min: 10000
    action:
      # Will only trigger on PRs if the 'diff' selector returns a match.
      perform: close
      # NOTE: can include markdown directives in reply comment.
      comment: |
        Thank you for your contribution to our project! :smile:

        Unfortunately, this PR is *too large to be reviewed effectively*. :disappointed:

        Please break down the changes into individual PRs no larger than {diff.min} lines.
